diff --git a/openstack_dashboard/dashboards/service_management/container_service/database/service.sqlite b/openstack_dashboard/dashboards/service_management/container_service/database/service.sqlite
index 5efc004..9912ff8 100644
Binary files a/openstack_dashboard/dashboards/service_management/container_service/database/service.sqlite and b/openstack_dashboard/dashboards/service_management/container_service/database/service.sqlite differ
diff --git a/openstack_dashboard/dashboards/service_management/container_service/database/services.py b/openstack_dashboard/dashboards/service_management/container_service/database/services.py
index ba3ec27..45831cd 100644
--- a/openstack_dashboard/dashboards/service_management/container_service/database/services.py
+++ b/openstack_dashboard/dashboards/service_management/container_service/database/services.py
@@ -33,6 +33,7 @@ class Container(Base):
         return self.id
 
 
+
 engine = create_engine(
     'sqlite:///' + CURRENT_FOLDER_PATH + '/service.sqlite', echo=True)
 db_session = scoped_session(sessionmaker(autocommit=False,
@@ -66,3 +67,4 @@ class DatabaseService:
 
     def close(self):
         pass
+
diff --git a/openstack_dashboard/dashboards/service_management/container_service/service/forms.py b/openstack_dashboard/dashboards/service_management/container_service/service/forms.py
index 09ebc11..8f60e2d 100644
--- a/openstack_dashboard/dashboards/service_management/container_service/service/forms.py
+++ b/openstack_dashboard/dashboards/service_management/container_service/service/forms.py
@@ -10,8 +10,6 @@ from openstack_dashboard.dashboards.service_management.container_service.databas
 from django.utils.safestring import mark_safe
 from django.core.urlresolvers import reverse
 from horizon import exceptions
-# from openstack_dashboard.dashboards.service_management.\
-#     container_service.database import services as ctn_service
 
 
 class CreateServiceForm(forms.SelfHandlingForm):
@@ -45,11 +43,13 @@ class CreateServiceForm(forms.SelfHandlingForm):
 
     def clean(self):
         cleaned_data = super(CreateServiceForm, self).clean()
-        # service_list = db_service.db_session.query(db_service.Service).all()
-        list_service = ['1', '2', '3', '4', '5']
+        services_name = []
+        for service in db_service.db_session.query(db_service.Service).all():
+            services_name.append(service.service_name)
+        # list_service = ['1', '2', '3', '4', '5']
 
         # Validate name service
-        if self.data['service_name'] and (self.data['service_name'] in list_service):
+        if self.data['service_name'] and (self.data['service_name'] in services_name):
             msg = _("Name service exists!")
             self._errors['service_name'] = self.error_class([msg])
             self.data['container_number'] = 'Select container number'
@@ -58,31 +58,47 @@ class CreateServiceForm(forms.SelfHandlingForm):
         # Validate info about containers
         if self.data['container_number']:
             msg = ''
+            containers_name_input = []
+
             for i in range(int(self.data['container_number'])):
                 error = False
+                mes = ''
                 # if self.data['container_IP' + str(i)]:
-                #     ip = self.data['container_IP' + str(i)]
-                #     for obj in ip.split(';'):
-                #         if len(obj.split(':')) != 2:
-                #             msg += 'container_IP wrong format' + '<br/>'
-                #             error = True
-                #             break
+                # if
 
-                # if self.data['container_Internal_External_Port' + str(i)]:
-                #     msg += 'container_Internal_External_Port is required' + '<br/>'
-                #     error = True
+                if self.data['container_Internal_External_Port' + str(i)]:
+                    int_ext_port = self.data['container_Internal_External_Port' + str(i)]
+                    for obj in int_ext_port.split(';'):
+                        if len(obj.split(':')) != 2:
+                            mes += 'container_Internal_External_Port wrong format' + '<br/>'
+                            error = True
+                            break
 
                 if self.data['container_environment' + str(i)]:
                     env = self.data['container_environment' + str(i)]
                     for obj in env.split(';'):
                         if len(obj.split(':')) != 2:
-                            msg += 'container environment wrong format' + '<br/>'
+                            mes += 'container environment wrong format' + '<br/>'
                             error = True
                             break
 
                 if error:
-                    msg = '<b>Container' + str(i) + '</b><br/>' + msg
+                    mes = '<b>Container' + str(i) + '</b><br/>' + mes
+                    msg += mes
+
+            # Validate duplicate container name
+            for i in range(int(self.data['container_number'])):
+                containers_name_input.append(self.data['container_name' + str(i)])
+            if len(containers_name_input) != len(set(containers_name_input)):
+                msg += '<br>Error duplicate name containers'
+            else:
+                cli = docker_api.connect_docker()
+                for ct in cli.containers(all=True):
+                    name = ct['Names'][0][1:]
+                    if name in containers_name_input:
+                        msg += '<br>Name container exits!'
 
+            # If have error
             if msg != '':
                 self.data['container_number'] = 'Select container number'
                 raise forms.ValidationError(mark_safe(msg))
@@ -132,7 +148,7 @@ class CreateServiceForm(forms.SelfHandlingForm):
                 for port in container['port']:
                     arr = port.split(':')
                     ports.append(arr[0])
-                    if arr[1]=='None':
+                    if arr[1] == 'None':
                         port_bindings[arr[0]] = None
                     else:
                         port_bindings[arr[0]] = arr[1]
diff --git a/openstack_dashboard/dashboards/service_management/container_service/service/urls.py b/openstack_dashboard/dashboards/service_management/container_service/service/urls.py
index 6b607cc..3a385e5 100644
--- a/openstack_dashboard/dashboards/service_management/container_service/service/urls.py
+++ b/openstack_dashboard/dashboards/service_management/container_service/service/urls.py
@@ -5,4 +5,7 @@ from openstack_dashboard.dashboards.service_management.container_service.service
 urlpatterns = [
     url(r'^create/$', views.CreateService.as_view(), name='create'),
     url(r'^image_docker', views.ImageDockerRequest.as_view(), name='image_docker'),
+    url(r'^network_detail', views.NetworkDetailRequest.as_view(), name='network_detail'),
+    url(r'^container_list',views.ListContainerInServiceRequest.as_view(),name='container_list'),
+
 ]
diff --git a/openstack_dashboard/dashboards/service_management/container_service/service/views.py b/openstack_dashboard/dashboards/service_management/container_service/service/views.py
index 6973962..d866e95 100644
--- a/openstack_dashboard/dashboards/service_management/container_service/service/views.py
+++ b/openstack_dashboard/dashboards/service_management/container_service/service/views.py
@@ -4,6 +4,8 @@ from horizon import forms
 from openstack_dashboard.dashboards.service_management.container_service.service import forms as create_forms
 from django.core.urlresolvers import reverse
 from horizon import exceptions
+from openstack_dashboard.dashboards.service_management.container_service.database \
+    import services as database_service
 from horizon import views
 from docker import Client
 import django.views
@@ -32,3 +34,36 @@ class ImageDockerRequest(django.views.generic.TemplateView):
                 image_docker.append({'name_image': repoTags})
 
         return HttpResponse(json.dumps(image_docker), content_type='application/json')
+
+
+class NetworkDetailRequest(django.views.generic.TemplateView):
+    def get(self, request, *args, **kwargs):
+        network_id = request.GET.get('id', None)
+        cli = Client(base_url='unix://var/run/docker.sock')
+        network_info = cli.networks(ids=[network_id, ])[0]
+        name = network_info['Name']
+        try:
+            subnet = network_info['IPAM']['Config'][0]['Subnet']
+        except:
+            subnet = 'None'
+        try:
+            gateway = network_info['IPAM']['Config'][0]['Gateway']
+        except:
+            gateway = 'None'
+
+        network_detail = {'name': name, 'subnet': subnet, 'gateway': gateway}
+
+
+        return HttpResponse(json.dumps(network_detail), content_type='application/json')
+
+
+class ListContainerInServiceRequest(django.views.generic.TemplateView):
+    def get(self,request,*args,**kwargs):
+        service_id = request.GET.get('service_id',None)
+        containers_id = []
+        for container_id in database_service.db_session.query(database_service.Container).\
+            filter(database_service.Container.service_id== service_id):
+            containers_id.append(container_id)
+        result = {'container_list': containers_id}
+        return HttpResponse(json.dumps(result),content_type='application/json')
+
diff --git a/openstack_dashboard/dashboards/service_management/container_service/templates/container_service/container/container_table.html b/openstack_dashboard/dashboards/service_management/container_service/templates/container_service/container/container_table.html
index 14e4a2f..e192e9f 100755
--- a/openstack_dashboard/dashboards/service_management/container_service/templates/container_service/container/container_table.html
+++ b/openstack_dashboard/dashboards/service_management/container_service/templates/container_service/container/container_table.html
@@ -18,42 +18,42 @@
     </div>
 </div>
 
-<div class="line-chart">
-    <div class="info row detail">
-        <div class="col-sm-12">
-            <hr class="header_rule"/>
-            <div class="info row detail">
-                <div class="col-sm-9">
-                    <div class="chart"
-                         data-chart-type="container_line_chart"
-                         data-container-list-url = "{% url "horizon:service_management:container_service:chart:container_list" %}"
-                         data-container-detail-url="{% url "horizon:service_management:container_service:chart:container_cpu_detail" %}"
-                         data-legend-selector="#legend"
-                         data-smoother-selector="#smoother"
-                         data-slider-selector="#slider">
-                    </div>                        
-                    <div class="legend"></div>
-                </div>
-            </div>
-        </div>
-    </div>
-
-    <div class="info row detail">
-        <div class="col-sm-12">
-            <hr class="header_rule"/>
-            <div class="info row detail">
-                <div class="col-sm-9">
-                    <div class="chart"
-                         data-chart-type="container_line_chart"
-                         data-container-list-url = "{% url "horizon:service_management:container_service:chart:container_list" %}"
-                         data-container-detail-url="{% url "horizon:service_management:container_service:chart:container_ram_detail" %}"
-                         data-legend-selector="#legend"
-                         data-smoother-selector="#smoother"
-                         data-slider-selector="#slider">
-                    </div>
-                    <div class="legend"></div>
-                </div>
-            </div>
-        </div>
-    </div>
-</div>
\ No newline at end of file
+{#<div class="line-chart">#}
+{#    <div class="info row detail">#}
+{#        <div class="col-sm-12">#}
+{#            <hr class="header_rule"/>#}
+{#            <div class="info row detail">#}
+{#                <div class="col-sm-9">#}
+{#                    <div class="chart"#}
+{#                         data-chart-type="container_line_chart"#}
+{#                         data-container-list-url = "{% url "horizon:service_management:container_service:chart:container_list" %}"#}
+{#                         data-container-detail-url="{% url "horizon:service_management:container_service:chart:container_cpu_detail" %}"#}
+{#                         data-legend-selector="#legend"#}
+{#                         data-smoother-selector="#smoother"#}
+{#                         data-slider-selector="#slider">#}
+{#                    </div>#}
+{#                    <div class="legend"></div>#}
+{#                </div>#}
+{#            </div>#}
+{#        </div>#}
+{#    </div>#}
+{##}
+{#    <div class="info row detail">#}
+{#        <div class="col-sm-12">#}
+{#            <hr class="header_rule"/>#}
+{#            <div class="info row detail">#}
+{#                <div class="col-sm-9">#}
+{#                    <div class="chart"#}
+{#                         data-chart-type="container_line_chart"#}
+{#                         data-container-list-url = "{% url "horizon:service_management:container_service:chart:container_list" %}"#}
+{#                         data-container-detail-url="{% url "horizon:service_management:container_service:chart:container_ram_detail" %}"#}
+{#                         data-legend-selector="#legend"#}
+{#                         data-smoother-selector="#smoother"#}
+{#                         data-slider-selector="#slider">#}
+{#                    </div>#}
+{#                    <div class="legend"></div>#}
+{#                </div>#}
+{#            </div>#}
+{#        </div>#}
+{#    </div>#}
+{#</div>#}
\ No newline at end of file
diff --git a/openstack_dashboard/dashboards/service_management/container_service/templates/container_service/service/_create.html b/openstack_dashboard/dashboards/service_management/container_service/templates/container_service/service/_create.html
index 4752a12..6439ebd 100644
--- a/openstack_dashboard/dashboards/service_management/container_service/templates/container_service/service/_create.html
+++ b/openstack_dashboard/dashboards/service_management/container_service/templates/container_service/service/_create.html
@@ -7,14 +7,8 @@
 
 {% block modal-body-right %}
     <h3>{% trans "Description:" %}</h3>
-    <p>
-        <strong>{% trans "Please note: " %}</strong>
-        {% if HORIZON_IMAGES_ALLOW_UPLOAD %}
-            {% trans "If you select an image via an HTTP/HTTPS URL, the Image Location field MUST be a valid and direct URL to the image binary; it must also be accessible to the Image Service. URLs that redirect or serve error pages will result in unusable images." %}
-        {% else %}
-            {% trans "The Image Location field MUST be a valid and direct URL to the image binary. URLs that redirect or serve error pages will result in unusable images." %}
-        {% endif %}
-    </p>
+    <p> Input information to create service</p>
+    <p id="des"></p>
 {% endblock %}
 
 {% block modal-js %}
@@ -37,6 +31,26 @@
             $(container_list_form)
                     .attr('id', 'container_list_form')
                     .appendTo(form_body)
+
+            $('#id_network').on('change', function () {
+                var network_id = $('#id_network').val();
+                if (network_id == '') {
+                    $('#des').empty()
+                }
+                else {
+                    $.ajax({
+                        url: "{% url "horizon:service_management:container_service:service:network_detail" %}" + '?id=' + network_id,
+                        success: function (data) {
+                            $('#des').html('Network ' + data['name'] + '<br>Subnet: ' + data['subnet'] + '<br>Gateway: ' + data['gateway']);
+                        },
+                        error: function (e) {
+                            console.log('error')
+                        }
+
+                    });
+                }
+
+            });
             $('#id_container_number').on('change', function () {
                 var container_list_form = $("#container_list_form").empty();
                 var num_container = $(this).val();
@@ -160,8 +174,8 @@
                             .attr('id', 'id_container_IP' + i.toString())
                             .attr('name', 'container_IP' + i.toString())
                             .attr('type', 'text')
-{#                            .attr('pattern','/^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$')#}
-{#                            .attr('title','IP format fail')#}
+                            {#                            .attr('pattern','/^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$')#}
+                            {#                            .attr('title','IP format fail')#}
                             .appendTo(container_IP_input_wrapper);
 
                     // Internal:External Port
